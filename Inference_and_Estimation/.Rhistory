filter(taxon == "Copris nubilosus") %>%
pivot_longer(cols = c("main_forest_type", "X2013_disturbance_type", "X2013_land_use"), names_to = "x_values") %>%
ggplot(aes(x = value, y = count)) +
geom_col() +
facet_grid(x_values ~ ., scales = "free_x", space = "free")
main %>%
group_by(collectdate, site) %>%
summarise(
richness = sum(count>0),
minimum = min(count),
maximum = max(count),
total = sum(count)
)
q8 <- main %>%
group_by(collectdate, site) %>%
summarise(
richness = sum(count>0),
minimum = min(count),
maximum = max(count),
total = sum(count)
)
main %>%
filter(taxon == "Copris nubilosus") %>%
pivot_longer(cols = c("main_forest_type", "X2013_disturbance_type", "X2013_land_use"), names_to = "x_values") %>%
ggplot(aes(x = value, y = count)) +
geom_col() +
facet_grid(x_values ~ ., scales = "free_x")
main %>%
filter(taxon == "Copris nubilosus") %>%
pivot_longer(cols = c("main_forest_type", "X2013_disturbance_type", "X2013_land_use"), names_to = "x_values") %>%
ggplot(aes(x = value, y = count)) +
geom_col() +
facet_wrap(~x_values, scales = "free_x")
library(tidyr)
library(diplyr)
library(dplyr)
library(ggplot2)
library(readxl)
woodex <- read_excel("S5_Prac/S5_data.xlsx", sheet = "woodextraction")
str(woodex)
woodex %>%
pull(wood) %>% is.na()
woodex %>%
pull(wood) %>% is.na() %>% any()
woodex %>%
ggplot(aes(x = wood)) +
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram()
# Find mean
m_woodex <- mean(woodex$wood)
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram() +
geom_vline(aes(xintercept= m_woodex))
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30) +
geom_vline(aes(xintercept= m_woodex))
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30, col = black) +
geom_vline(aes(xintercept= m_woodex))
# Plot a historgram
woodex %>%
ggplot(aes(x = wood, col = black)) +
geom_histogram(binwidth = 30) +
geom_vline(aes(xintercept= m_woodex))
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30, col = b) +
geom_vline(aes(xintercept= m_woodex))
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30, col = "black") +
geom_vline(aes(xintercept= m_woodex))
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30, col = "black") +
geom_vline(aes(xintercept= m_woodex, col = "red"))
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30, col = "black") +
geom_vline(aes(xintercept= m_woodex, col = "red"), label = "Mean")
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30, col = "black") +
geom_vline(aes(xintercept= m_woodex, col = "red"), label = "Mean", show.legend = TRUE)
geom_vline(aes(xintercept= m_woodex, colour = m_woodex)
# Plot a historgram
woodex %>%
# Plot a historgram
woodex %>%
ggplot(aes(x = wood)) +
geom_histogram(binwidth = 30, col = "black") +
geom_vline(aes(xintercept= m_woodex, colour = m_woodex))
t.test(x = woodex %>% pull(wood),
alternative = "greater",
mu = 300)
t.test(x = woodex %>% pull(wood))$conf.int
t.test(x = woodex %>% pull(wood), conf.level = 0.99)
t.test(x = woodex %>% pull(wood), conf.level = 0.99)$conf.int
# QQ plot
woodex %>%
ggplot(aes(x = wood)) +
stat_qq() +
stat_qq_line()
# QQ plot
woodex %>%
ggplot(aes(x = wood)) +
geom_qq() +
stat_qq_line()
# QQ plot
woodex %>%
ggplot(aes(sample = wood)) +
geom_qq() +
geom_qq_line()
# Kolmogorov-Smirnov test
ks.test(x = woodex %>% pull(wood))
# Kolmogorov-Smirnov test
ks.test(x = woodex %>% pull(wood), y = "normal", alternative = "two.sided")
# Kolmogorov-Smirnov test
ks.test(x = woodex %>% pull(wood), y = "pnorm", alternative = "two.sided")
rec <- readexcel("S5_Prac/S5_data.xlsx", sheet = "recycling")
rec <- read_excel("S5_Prac/S5_data.xlsx", sheet = "recycling")
str(rec)
rec %>% pull(before) %>% is.na()
rec %>% pull(after) %>% is.na()
rec %>%
mutate(across(everything(), is.na()))
mutate(across(everything(), is.na)
rec %>%
mutate(across(everything(), is.na))
rec %>%
mutate(across(everything(), is.na)) %>%
any()
rec %>%
ggplot(aes(x = after)) +
geom_histogram(binwidth = 30, col = "black")
rec %>%
ggplot(aes(x = after)) +
geom_histogram(col = "black")
rec %>%
ggplot(aes(x = after)) +
geom_histogram(bins = 10, col = "black")
rec %>%
ggplot(aes(x = before)) +
geom_histogram(bins = 10, col = "black")
# Check for NAs
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment")
# Check for NAs
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(x = value, col = treatment)) +
geom_histogram() +
facet_wrap(~treatment)
# Check for NAs
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(x = value, fill = treatment)) +
geom_histogram() +
facet_wrap(~treatment)
# Check for NAs
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(x = value, fill = treatment)) +
geom_histogram(bins = 10) +
facet_wrap(~treatment)
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(x = value, fill = treatment)) +
geom_histogram(bins = 10, position = position_dodge())
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(x = value, fill = treatment)) +
geom_histogram(bins = 10, position = position_identity())
# Make transparent
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(x = value, fill = treatment)) +
geom_histogram(bins = 10, position = position_identity(), alpha = 0.3)
# 2 Panels (best as we only care if each sample is normal in and of itself)
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(x = value, fill = treatment)) +
geom_histogram(bins = 10) +
facet_wrap(~treatment)
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(sample = value)) +
geom_qq() +
geom_qq_line()
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
ggplot(aes(sample = value)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~treatment)
sd(rec$before)
sd(rec$after)
rec %>%
group_by(treatment) %>%
summarise(variance = var())
rec %>%
group_by(treatment) %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
summarise(variance = var())
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment) %>%
summarise(variance = var())
rec %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment) %>%
summarise(sd = sd(value))
t.test(x = rec %>% pull(before),
y = rec %>% pull(after),
alternative = "greater")
t.test(x = rec %>% pull(before),
y = rec %>% pull(after),
alternative = "greater", paired = TRUE)
t.test(x = rec %>% pull(before),
y = rec %>% pull(after),
alternative = "greater",
paired = TRUE,
conf.level = 0.95)
t.test(x = rec %>% pull(after),
y = rec %>% pull(before),
alternative = "greater",
paired = TRUE,
conf.level = 0.95)
biomass <- read_excel("S5_Prac/S5_data.xlsx", sheet = "biomass")
str(biomass)
View(biomass)
rec %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
ggplot(aes(x = value, fill = set)) +
geom_histogram() +
facet_wrap(~set)
biomass %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
ggplot(aes(x = value, fill = set)) +
geom_histogram() +
facet_wrap(~set)
biomass %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
ggplot(aes(x = value, fill = set)) +
geom_histogram(bins = 30) +
facet_wrap(~set)
biomass %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
ggplot(aes(x = value, fill = set)) +
geom_histogram(bins = 15) +
facet_wrap(~set)
biomass %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
ggplot(aes(sample = value)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~set)
rec %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
group_by(set) %>%
summarise(sd = sd(value))
biomass %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
group_by(set) %>%
summarise(sd = sd(value))
t.test(x = biomass %>% pull(treatment),
y = biomass %>% pull(control),
alternative = "two.sided",
paired = FALSE,
conf.level = 0.95)
#ks test
ks.test(x = biomass %>% pull(control),
y = "pnorm", #pnorm = normal distribution
alternative = "two.sided")
ks.test(x = biomass %>% pull(treatment),
y = "pnorm", #pnorm = normal distribution
alternative = "two.sided")
t.test(x = biomass %>% pull(treatment),
y = biomass %>% pull(control),
alternative = "greater",
paired = FALSE,
conf.level = 0.95)
t.test(x = biomass %>% pull(treatment),
y = biomass %>% pull(control),
alternative = "two.sided",
paired = FALSE,
var.equal = TRUE,
conf.level = 0.95)
t.test(x = biomass %>% pull(treatment),
y = biomass %>% pull(control),
alternative = "greater",
var.equal = TRUE,
paired = FALSE,
conf.level = 0.95)
biomass %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
ggplot(aes(sample = value)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~set)
biomass %>%
pivot_longer(cols = c("control", "treatment"), names_to = "set") %>%
ggplot(aes(x = value, fill = set)) +
geom_histogram(bins = 15) +
facet_wrap(~set)
binom.test(x = 16, n = 40, p = 0.2,
alternative = "greater")
library(tidyr)
library(dplyr)
library(ggplot2)
install.packages(ggplot2)
trawl <- read.csv("S6_Prac/pairedtt_trawlprocess.csv")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
str(trawl)
trawl %>%
ggplot(aes(x = extra, col = group)) +
geom_histogram() +
facet_wrap(~group)
trawl %>%
ggplot(aes(x = extra, fill = group)) +
geom_histogram() +
facet_wrap(~group)
trawl %>%
ggplot(aes(x = extra, fill = group)) +
geom_histogram(bins = 10) +
facet_wrap(~group)
trawl <- trawl %>%
mutate(group = recode(as.characters(group), '1' = 'altered', '2' = 'manual'))
trawl <- trawl %>%
mutate(group = recode(as.character(group), '1' = 'altered', '2' = 'manual'))
View(trawl)
trawl %>%
ggplot(aes(x = extra, fill = group)) +
geom_histogram(bins = 10) +
facet_wrap(~group)
trawl %>%
ggplot(aes(x = extra, fill = group)) +
geom_histogram(bins = 15) +
facet_wrap(~group)
trawl %>%
ggplot(aes(x = extra, fill = group)) +
geom_histogram(bins = 6) +
facet_wrap(~group)
trawl %>%
ggplot(aes(sample = extra)) +
geom_qq() +
geom_qq_line() +
facet_wrap(~group)
ks.test(x = trawl %>% pull(extra),
y = "pnorm", #pnorm = normal distribution
alternative = "two.sided")
# Kolmogorov - Smirnow
trawl %>% filter(group == "altered") %>% pull(extra) %>%
ks.test(x = .,
y = "pnorm", #pnorm = normal distribution
alternative = "two.sided")
trawl %>% filter(group == "manual") %>% pull(extra) %>%
ks.test(x = .,
y = "pnorm", #pnorm = normal distribution
alternative = "two.sided")
t.test(x = trawl %>% filter(group == "altered") %>% pull(extra), # X must be greater than Y therefore after has to be first
y = trawl %>% filter(group == "manual") pull(extra),
t.test(x = trawl %>% filter(group == "altered") %>% pull(extra), # X must be greater than Y therefore after has to be first
y = trawl %>% filter(group == "manual") %>% pull(extra),
alternative = "greater",
paired = TRUE,
conf.level = 0.95)
t.test(extra ~ group, data = trawl,
paired = TRUE,
alternative = "two.sided")
library(vegan)
data(BCI)
data(BCI.env)
# Join datasets
diversity(BCI)
# Join datasets
diversity(BCI, index = "shannon")
# Join datasets
BCI.env %>%
mutate(shannon = diversity(BCI, index = "shannon"))
# Join datasets
BCI.env %>%
mutate(shannon = diversity(BCI, index = "shannon"), richness = specnumber(BCI))
# Join datasets
BCI.env %>%
mutate(shannon = diversity(BCI, index = "shannon"),
richness = specnumber(BCI))
# Join datasets
BCI.analysis <- BCI.env %>%
mutate(shannon = diversity(BCI, index = "shannon"),
richness = specnumber(BCI))
shanhab.aov <- aov(shannon ~ Habitat, data = BCI.analysis)
View(shanhab.aov)
summary(shanhab.aov)
coefficients(shanhab.aov) # See the coefficients
library(ggfortify)
install.packages("ggfortify")
library(ggfortify)
autplot(shanhab.aov)
autoplot(shanhab.aov)
BCI.analysis %>%
filter(Habitat != "Young")
BCI.analysis.exclYoung <- BCI.analysis %>%
filter(Habitat != "Young")
shanhab.aov.exclYoung <- aov(shannon ~ Habitat, data = BCI.analysis.exclYoung)
autoplot(shanhab.aov.exclYoung)
summary(shanhab.aov.exclYoung) # Get the ANOVA table
coefficients(shanhab.aov.exclYoung) # See the coefficients (Mean of first category followed by +/- of the other means)
# Questionable Post Hoc Test
TukeyHSD(shanhab.aov.exclYoung)
df <- data.frame(
before = c(42, 34, 33, 28, 28, 57, 24, 47, 32, 30, 36, 32),
after = c(24, 27, 18, 27, 11, 26, 0, 32, 10, 18, 28, 12)
)
View(df)
View(df)
wilcox.test(x = df$before, y = df$after,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
wilcox.test(x = df$after, y = df$before,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
patrol.wil <- wilcox.test(x = df$after, y = df$before,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
summary(patrol.wil)
patrol.wil <- wilcox.test(x = df$before, y = df$after,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
patrol.wil <- wilcox.test(x = df$after, y = df$before,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
patrol.wil2 <- wilcox.test(x = df$before, y = df$after,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
wilcox.test(x = df$after, y = df$before,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
wilcox.test(x = df$before, y = df$after,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
wilcox.test(x = df$after, y = df$before,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
df.long <- df %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment)
View(df.long)
df.long <- df %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment) %>%
ggplot(aes(x = treatment, y = value)) +
geom_boxplot()
df.long <- df %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment) %>%
ggplot(aes(x = treatment, y = value)) +
geom_boxplot()
df %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment) %>%
ggplot(aes(x = treatment, y = value)) +
geom_boxplot()
df %>%
pivot_longer(cols = c("before", "after"),
names_to = "treatment") %>%
ggplot(aes(sample= value, col = treatment)) +
geom_qq() +
stat_qq_line()
df %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment) %>%
ggplot(aes(x = treatment, y = value)) +
geom_boxplot()
df %>%
pivot_longer(cols = c("before", "after"),
names_to = "treatment") %>%
ggplot(aes(sample = value, col = treatment)) +
geom_qq() +
stat_qq_line()
wilcox.test(x = df$after, y = df$before,
alternative = "less",
conf.level = 0.95,
paired = TRUE)
df %>%
pivot_longer(cols = c("before", "after"), names_to = "treatment") %>%
group_by(treatment) %>%
ggplot(aes(x = treatment, y = value)) +
geom_boxplot()
