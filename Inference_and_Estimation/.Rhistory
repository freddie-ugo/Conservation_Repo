# Read in CSV
#Fixes header issue with skip
dbdata_DA <- read.csv("S2_Prac/dbdata_DA.csv", skip = 1)
ls
# Read in CSV
#Fixes header issue with skip
dbdata_DA <- read.csv("S2_Prac/dbdata_DA.csv", skip = 1)
# Read in CSV
#Fixes header issue with skip
dbdata_DA <- read.csv("S2_Prac/dbdata_DA.csv", skip = 1)
pwd
get wd
getwd
getwd()
setwd(/Users/freddieugo/Documents/GitHub/Conservation_Repo/Inference_and_Estimation)
setwd(Users/freddieugo/Documents/GitHub/Conservation_Repo/Inference_and_Estimation)
setwd('Users/freddieugo/Documents/GitHub/Conservation_Repo/Inference_and_Estimation')
setwd(/Users/freddieugo/Documents/GitHub/Conservation_Repo/Inference_and_Estimation)
getwd()
setwd('/Users/freddieugo/Documents/GitHub/Conservation_Repo/Inference_and_Estimation')
getwd()
# Read in CSV
#Fixes header issue with skip
dbdata_DA <- read.csv("S2_Prac/dbdata_DA.csv", skip = 1)
# Load Libraries
library(tidyr)
library(dplyr)
library(stringr)
# Load Libraries
install.packages('tidyr')
install.packages('dplyr')
install.packages('stringr')
library(tidyr)
library(dplyr)
library(stringr)
# FIX SPECIES MISSPELLING ISSUE
dbdata_DA_fix <- dbdata_DA %>%
mutate(taxon = str_replace_all(taxon, "  ", " ")) %>%
mutate(taxon = str_replace_all(taxon, "[ \t]+", " ")) %>%
mutate(taxon = str_replace_all(taxon, "Eurystenus", "Eurysternus")) %>%
mutate(taxon = str_replace_all(taxon, "belorinus", "belhorinus"))
#FIX TRANSECT AND SITE
dbdata_DA %>%
unite("site", transect, site, sep = "_")
dbdata_BA <- read.csv("S2_Prac/dbdata_DA.csv")
dbdata_BA <- read.csv("S2_Prac/dbdata_BA.csv")
dbdata_BA
dbdata_BA %>% count(taxon)
dbdata_BA
str(dbdata)
str(dbdata_BA)
#Check unique sites
dbdata_BA %>% pull(site) %>% unique
#Check unique sites
dbdata_BA %>% pull(site) %>% unique
#Check unique sites
dbdata_BA %>% pull(site) %>% unique
library(tidyr)
library(dplyr)
library(stringr)
l
#Check unique sites
dbdata_BA %>% pull(site) %>% unique
dbdata_BA %>%
mutate(camp = "BA")
View(dbdata_BA)
dbdata_BA %>%
mutate(camp = "BA",
setdate = ifelse(setdate == "", NA, setdate)
collectdate = ifelse(collectdate == "", NA, collectdate))
dbdata_BA %>%
mutate(camp = "BA",
setdate = ifelse(setdate == "", NA, setdate),
collectdate = ifelse(collectdate == "", NA, collectdate))
dbdata_BA %>%
mutate(camp = "BA",
setdate = ifelse(setdate == "", NA, setdate),
collectdate = ifelse(collectdate == "", NA, collectdate)) %>%
fill(setdate, collectdate, .direction = "down")
dbdata_BA %>%
mutate(camp = "BA",
setdate = ifelse(setdate == "", NA, setdate),
collectdate = ifelse(collectdate == "", NA, collectdate)) %>%
fill(setdate, collectdate, .direction = "down") %>%
pivot_longer(!c(camp, site, setdate, collectdate, name), names_to = "taxon", values_to = "count")
dbdata_BA %>%
mutate(camp = "BA",
setdate = ifelse(setdate == "", NA, setdate),
collectdate = ifelse(collectdate == "", NA, collectdate)) %>%
fill(setdate, collectdate, .direction = "down") %>%
pivot_longer(!c(camp, site, setdate, collectdate, name), names_to = "taxon", values_to = "count") %>%
mutate(count = replace_na(count, 0))
dbdata_BA_fix <- dbdata_BA %>%
mutate(camp = "BA",
setdate = ifelse(setdate == "", NA, setdate),
collectdate = ifelse(collectdate == "", NA, collectdate)) %>%
fill(setdate, collectdate, .direction = "down") %>%
pivot_longer(!c(camp, site, setdate, collectdate, name), names_to = "taxon", values_to = "count") %>%
mutate(count = replace_na(count, 0))
# Relocate
dbdata_BA %>% relocate(count, site)
# Relocate
dbdata_BA_fix %>% relocate(count, site)
#Filter selects rows
dbdata_BA_fix %>% filter(taxon == "Copris.laeviceps")
dbdata_BA_fix %>% filter(site == "BA2_SS1")
#Select selects Columns
dbdata_BA_fix %>% select(site, taxon, count)
dbdata_BA_fix %>% select(-collectdate, -camp)
dbdata_BA_fix %>% filter(site != "BA1_SS1")
#Select selects Columns
dbdata_BA_fix %>% select(site, taxon, count)
dbdata_BA_fix %>% select(-collectdate, -camp)
dbdata_BA_fix %>% filter(site != "BA1_SS1")
dbdata_CO_occ <- read.csv("S2_Prac/dbdata_CO_occ.csv")
dbdata_CO_rec <- read.csv("S2_Prac/dbdata_CO_rec.csv")
View(dbdata_CO_occ)
View(dbdata_CO_rec)
left_join(dbdata_CO_occ, dbdata_CO_rec, by = c("id" = "id"))
library(tidyr)
library(dplyr)
library(stringr)
library(readxl)
install.packages(readxl)
install.packages(readxl)
install.packages("readxl")
library(readxl)
install.packages("ggplot2")
library(ggplot2)
getwd()
read_excel("S3_Prac/dbanalysis.xlsx", sheet = "dbdata")
dbdata <- read_excel("S3_Prac/dbanalysis.xlsx", sheet = "dbdata")
habitat <- read_excel("S3_Prac/dbanalysis.xlsx", sheet = "habitat")
remotesense <- read_excel("S3_Prac/dbanalysis.xlsx", sheet = "remotesense")
View(dbdata)
View(habitat)
View(remotesense)
View(dbdata)
View(habitat)
View(dbdata)
View(remotesense)
View(dbdata)
left_join(dbdata, habitat, by =c("site" = "site"))
left_join(dbdata, habitat, by = c("site" = "site")) %>%
left_join(remotesense, by = c("UTM_X" = "UTM_X", "UTM_Y" = "UTM_Y"))
habitat %>% str(habitat)
str(habitat)
str(remotesense)
habitat %>%
mutate(UTM_X = as.numeric(UTM_X))
habitat <- habitat %>%
mutate(UTM_X = as.numeric(UTM_X))
habitat <- habitat %>%
mutate(UTM_X = as.numeric(UTM_X),
UTM_Y = as.numeric(UTM_Y))
left_join(dbdata, habitat, by = c("site" = "site")) %>% slice(1)
left_join(dbdata, habitat, by = c("site" = "site")) %>%
left_join(remotesense, by = c("UTM_X" = "UTM_X", "UTM_Y" = "UTM_Y"))
main <- left_join(dbdata, habitat, by = c("site" = "site")) %>%
left_join(remotesense, by = c("UTM_X" = "UTM_X", "UTM_Y" = "UTM_Y"))
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count)) +
geom_point()
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count, colour = "smooth")) +
geom_point()
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count, colour = camp)) +
geom_point()
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count, colour = camp)) +
geom_point(shape = 1, col = "green")
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count,)) +
geom_point(shape = 1, col = "green")
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count,)) +
geom_point(shape = 2, col = "green")
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count,)) +
geom_point(shape = 3, col = "green")
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count,)) +
geom_point(shape = 19, col = "green")
main %>%
filter(taxon == "Copris nubilosus") %>%
ggplot(aes(x = aspect, y = count,)) +
geom_point(shape = 1, col = "green")
main %>%
filter(str_detect(taxon, "Dichotomius")) %>%
ggplot(aes(x = dem, y = count, colour = taxon)) +
geom_point()
main %>%
filter(str_detect(taxon, "Dichotomius")) %>%
ggplot(aes(x = dem, y = count, colour = taxon)) +
geom_point() +
facet_wrap(~taxon)
#Separate by shape
main %>%
filter(str_detect(taxon, "Dichotomius")) %>%
ggplot(aes(x = dem, y = count, shape = taxon)) +
geom_point()
main %>%
filter(str_detect(taxon, "Dichotomius")) %>%
ggplot(aes(x = dem, y = count, colour = taxon)) +
geom_line()
main %>%
filter(str_detect(taxon, "Dichotomius")) %>%
ggplot(aes(x = dem, y = count, colour = taxon)) +
geom_point() +
geom_line()
main %>%
group_by(taxon)
main %>%
group_by(taxon) %>%
summarise(total = sum(count))
main %>%
group_by(taxon) %>%
summarise(total = sum(count)) %>%
ggplot(aes(x = taxon, y = total)) +
geom_col()
main %>%
group_by(taxon) %>%
summarise(total = sum(count)) %>%
ggplot(aes(x = taxon, y = total)) +
geom_col() +
coord_flip()
main %>%
group_by(taxon) %>%
summarise(total = sum(count)) %>%
ggplot(aes(x = total, y = taxon)) +
geom_col()
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram()
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram(bins = 50)
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram(bins = 50) +
labs(y = "frequency")
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram(bins = 12) +
labs(y = "frequency")
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram(bins = 50) +
labs(y = "frequency")
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram(bins = 50, colour = yellow) +
labs(y = "frequency")
geom_histogram(bins = 50, colour = "yellow"") +
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram(bins = 50, colour = "yellow") +
labs(y = "frequency")
# What is the distribution of the counts of Eurysternus magnus
main %>%
filter(taxon == "Eurysternus magnus") %>%
ggplot(aes(x = count)) +
geom_histogram(bins = 50, fill = "yellow") +
labs(y = "frequency")
